@page "/"
@namespace DynamicDriving.Trips.App.Pages
@using DynamicDriving.Trips.App.Support
@using Microsoft.AspNetCore.Authentication
@using System.Globalization
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "_Layout";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@{
    var initialTokenState = new InitialApplicationState
            {
                XsrfToken = Xsrf.GetAndStoreTokens(HttpContext).RequestToken,
                AccessToken = await HttpContext.GetTokenAsync("access_token"),
                RefreshToken = await HttpContext.GetTokenAsync("refresh_token")
            };

    var expiresAt = await HttpContext.GetTokenAsync("expires_at");
    if (DateTimeOffset.TryParse(expiresAt, CultureInfo.InvariantCulture, DateTimeStyles.None, out var expiration))
    {
        initialTokenState.ExpiresAt = expiration;
    }
    else
    {
        initialTokenState.ExpiresAt = DateTimeOffset.UtcNow;
    }
}

<component type="typeof(App)" render-mode="ServerPrerendered" param-InitialState="initialTokenState" />
